apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "library-chart.fullname" . }}-coordinator
  labels:
    {{- include "library-chart.labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- tpl (toYaml .Values.commonLabels) . | nindent 4 }}
    {{- end }}
    component: coordinator
spec:
  selector:
    matchLabels:
      {{- include "library-chart.labels" . | nindent 6 }}
      component: coordinator
  template:
    metadata:
      {{- if .Values.coordinator.annotations }}
      annotations:
      {{- tpl (toYaml .Values.coordinator.annotations) . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "library-chart.labels" . | nindent 8 }}
        {{- if .Values.commonLabels }}
        {{- tpl (toYaml .Values.commonLabels) . | nindent 8 }}
        {{- end }}
        component: coordinator
        {{- if .Values.coordinator.labels }}
        {{- tpl (toYaml .Values.coordinator.labels) . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "library-chart.serviceAccountName" . }}
      {{- with .Values.securityContext }}
      securityContext:
        runAsUser: {{ .runAsUser }}
        runAsGroup: {{ .runAsGroup }}
      {{- end }}
      {{- if .Values.shareProcessNamespace.coordinator }}
      shareProcessNamespace: {{ .Values.shareProcessNamespace.coordinator }}
      {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "library-chart.fullname" . }}-coordinator
        - name: catalog-volume
          configMap:
            name:  {{ include "library-chart.fullname" . }}-catalog
        - name: schemas-volume
          configMap:
            name: {{ include "library-chart.fullname" . }}-schemas-volume-coordinator
        - name: secret-coresite
          secret: 
            secretName:  {{ include "library-chart.secretNameCoreSite" . }}
        {{- if .Values.accessControl }}{{- if eq .Values.accessControl.type "configmap" }}
        - name: access-control-volume
          configMap:
            name: {{ include "library-chart.fullname" . }}-access-control-volume-coordinator
        {{- end }}{{- end }}
        {{- if .Values.resourceGroups }}
        - name: resource-groups-volume
          configMap:
            name: {{ include "library-chart.fullname" . }}-resource-groups-volume-coordinator
        {{- end }}
        {{- if contains "PASSWORD" .Values.server.config.authenticationType }}
        - name: password-volume
          secret:
            {{- if and .Values.auth .Values.auth.passwordAuthSecret }}
            secretName: {{ .Values.auth.passwordAuthSecret }}
            {{- else }}
            secretName: {{ include "library-chart.fullname" . }}-password-authentication
            {{- end }}
            items:
              - key: password.db
                path: password.db
              {{- if .Values.auth.groups }}
              - key: group.db
                path: group.db
              {{- end }}
        {{- end }}
        {{- range .Values.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
        {{- range .Values.coordinator.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
      {{- if .Values.initContainers.coordinator }}
      initContainers:
      {{- tpl (toYaml .Values.initContainers.coordinator) . | nindent 6 }}
      {{- end }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-coordinator
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          envFrom:
            {{- toYaml .Values.envFrom | nindent 12 }}
          volumeMounts:
            - mountPath: {{ .Values.server.config.path }}/hdfs
              name: secret-coresite
            - mountPath: {{ .Values.server.config.path }}
              name: config-volume
            - mountPath: {{ .Values.server.config.path }}/catalog
              name: catalog-volume
            - mountPath: {{ .Values.kafka.mountPath }}
              name: schemas-volume
            {{- if .Values.accessControl }}{{- if eq .Values.accessControl.type "configmap" }}
            - mountPath: {{ .Values.server.config.path }}/access-control
              name: access-control-volume
            {{- end }}{{- end }}
            {{- if .Values.resourceGroups }}
            - mountPath: {{ .Values.server.config.path }}/resource-groups
              name: resource-groups-volume
            {{- end }}
            {{- range .Values.secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
            {{- end }}
            {{- range .Values.coordinator.secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
            {{- end }}
            {{- if contains "PASSWORD" .Values.server.config.authenticationType }}
            - mountPath: {{ .Values.server.config.path }}/auth
              name: password-volume
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.networking.service.port }}
              protocol: TCP
          {{- range $key, $value := .Values.coordinator.additionalExposedPorts }}
            - name: {{ $value.name }}
              containerPort: {{ $value.port }}
              protocol: {{ $value.protocol }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http
            initialDelaySeconds: {{ .Values.coordinator.livenessProbe.initialDelaySeconds | default 20 }}
            periodSeconds: {{ .Values.coordinator.livenessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.coordinator.livenessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.coordinator.livenessProbe.failureThreshold | default 6 }}
            successThreshold: {{ .Values.coordinator.livenessProbe.successThreshold | default 1 }}
          readinessProbe:
            httpGet:
              path: /v1/info
              port: http
            initialDelaySeconds: {{ .Values.coordinator.readinessProbe.initialDelaySeconds | default 20 }}
            periodSeconds: {{ .Values.coordinator.readinessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.coordinator.readinessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.coordinator.readinessProbe.failureThreshold | default 6 }}
            successThreshold: {{ .Values.coordinator.readinessProbe.successThreshold | default 1 }}
          resources:
            {{- toYaml .Values.coordinator.resources | nindent 12 }}
      {{- if .Values.sidecarContainers.coordinator }}
        {{- toYaml .Values.sidecarContainers.coordinator | nindent 8 }}
      {{- end }}
      {{- with .Values.coordinator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.coordinator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.coordinator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
