apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "library-chart.fullname" . }}
  labels:
    {{- include "library-chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: server
spec:
  replicas: {{ .Values.argilla.replicaCount }}
  selector:
    matchLabels:
      {{- include "library-chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        {{- include "library-chart.labels" . | nindent 8 }}
        app.kubernetes.io/component: server
    spec:
      initContainers:
        - name: permissions-fixer
          image: alpine
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: data
              mountPath: /data
          command: [ "sh", "-c"]
          args:
            - |
              chown -R 1000:1000 /data
              chmod -R a+w /data
          resources:
            limits:
              cpu: 50m
              memory: 50Mi
        - name: wait-for-redis
          image: alpine/curl:latest
          imagePullPolicy: IfNotPresent
          command: [ "sh", "-c"]
          args:
            - |
              until echo PING | nc $REDIS_URL 6379
              do
                echo Redis not ready. Sleeping...
                sleep 5
              done
              echo Redis up!
          env:
            - name: REDIS_URL
              value: "{{ include "library-chart.fullname" . }}-redis"
        - name: wait-for-elasticsearch
          image: alpine/curl:latest
          imagePullPolicy: IfNotPresent
          command: [ "sh", "-c"]
          args:
            - |
              status_code=$(curl -s -o /dev/null -w '%{http_code}' $ELASTICSEARCH_URL)
              while [ $status_code -ne 200 ]
              do
                echo Elasticsearch not ready. Sleeping...
                sleep 5
                status_code=$(curl -s -o /dev/null -w '%{http_code}' $ELASTICSEARCH_URL)
              done
              echo Elasticsearch up!
          env:
            - name: ELASTICSEARCH_URL
              value: "http://{{ include "library-chart.fullname" . }}-elasticsearch:9200"
          resources:
            limits:
              cpu: 50m
              memory: 50Mi
        - name: wait-for-postgresql
          image: alpine/curl:latest
          imagePullPolicy: IfNotPresent
          command: [ "sh", "-c"]
          args:
            - |
              until echo PING | nc $POSTGRES_HOSTNAME 5432
              do
                echo Postgres not ready. Sleeping...
                sleep 5
              done
              echo Postgres up!
          env:
            - name: POSTGRES_HOSTNAME
              value: "{{ include "library-chart.fullname" . }}-postgresql"
          resources:
            limits:
              cpu: 50m
              memory: 50Mi
      containers:
        - name: argilla-server
          image: {{ printf "%s/%s:%s" .Values.argilla.image.registry .Values.argilla.image.repository .Values.argilla.image.tag }}
          imagePullPolicy: {{ .Values.argilla.image.pullPolicy | quote }}
          env:
            - name: USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "library-chart.fullname" . }}
                  key: username
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "library-chart.fullname" . }}
                  key: password
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "library-chart.fullname" . }}
                  key: apikey
            - name: ARGILLA_AUTH_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "library-chart.fullname" . }}
                  key: secretkey
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "library-chart.fullname" . }}-postgresql
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "library-chart.fullname" . }}-postgresql
                  key: password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ include "library-chart.fullname" . }}-postgresql
                  key: database
            - name: ARGILLA_HOME_PATH
              value: "/data"
            - name: ARGILLA_ELASTICSEARCH
              value: "http://{{ include "library-chart.fullname" . }}-elasticsearch:9200"
            - name: ARGILLA_REDIS_URL
              value: "redis://{{ include "library-chart.fullname" . }}-redis:6379/0"
            - name: ARGILLA_DATABASE_URL
              value: "postgresql+asyncpg://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@{{ include "library-chart.fullname" . }}-postgresql:5432/$(POSTGRES_DB)"
          ports:
            - containerPort: 6900
          volumeMounts:
            - name: hosts-file
              mountPath: /etc/hosts
              subPath: hosts
            - name: data
              mountPath: /data
          resources:
            {{- toYaml .Values.argilla.resources | nindent 12 }}
      volumes:
        - name: hosts-file
          configMap:
            name: hosts-file
{{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir:
            sizeLimit: {{ .Values.argilla.storageSize | quote }}
{{- else if not .Values.persistence.keepPVC }}
        - name: data
          persistentVolumeClaim:
            claimName: data-{{ include "library-chart.fullname" . }}
{{- else }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: {{ .Values.argilla.storageSize | quote }}
    {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
    {{- end }}
{{- end }}
